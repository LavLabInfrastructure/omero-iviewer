name: Sync Upstream Release

on:
  schedule:
    - cron: '0 2 * * *' # Daily at 2 AM UTC
  workflow_dispatch:

jobs:
  sync-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream
        run: git remote add upstream https://github.com/ome/omero-iviewer.git

      - name: Fetch all tags from upstream
        run: git fetch upstream --tags

      - name: Get latest upstream tag
        id: get_upstream_tag
        run: |
          latest_tag=$(git ls-remote --tags upstream | awk -F/ '{print $3}' | grep -v '{}' | sort -V | tail -n1)
          if [ -z "$latest_tag" ]; then
            echo "No upstream tag found. Exiting."
            exit 0
          fi
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Check if tag exists in fork
        id: check_fork_tag
        run: |
          exists=$(git tag -l "${{ env.LATEST_TAG }}")
          if [ -z "$exists" ]; then
            echo "exists=false" >> $GITHUB_OUTPUT
          else
            echo "exists=true" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream tag if not already present
        if: steps.check_fork_tag.outputs.exists == 'false'
        run: |
          git fetch upstream tag ${{ env.LATEST_TAG }}
          git checkout master
          git merge ${{ env.LATEST_TAG }} --no-ff --allow-unrelated-histories
        continue-on-error: true

      - name: Check merge result
        if: env.RELEASE_EXISTS == 'false'
        run: |
          if [ $? -ne 0 ]; then
            echo "MERGE_FAILED=true" >> $GITHUB_ENV
          else
            echo "MERGE_FAILED=false" >> $GITHUB_ENV
          fi

      - name: Push changes and tag if merge succeeded
        if: env.RELEASE_EXISTS == 'false' && env.MERGE_FAILED == 'false'
        run: |
          git push origin main
          git tag ${{ env.LATEST_TAG }}
          git push origin ${{ env.LATEST_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get upstream release notes
        if: env.RELEASE_EXISTS == 'false' && env.MERGE_FAILED == 'false'
        id: get_release_notes
        run: |
          notes=$(curl -s https://api.github.com/repos/ome/omero-iviewer/releases/latest | jq -r .body)
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$notes" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Create release in fork
        if: env.RELEASE_EXISTS == 'false' && env.MERGE_FAILED == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.LATEST_TAG }}
          name: ${{ env.LATEST_TAG }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create issue if merge failed
        if: env.RELEASE_EXISTS == 'false' && env.MERGE_FAILED == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Sync failed: Merge conflict for upstream release ${{ env.LATEST_TAG }}",
              body: "Automatic sync with upstream release `${{ env.LATEST_TAG }}` failed due to merge conflicts. Please resolve manually.",
              assignees: ["barrettMCW"]
            })
