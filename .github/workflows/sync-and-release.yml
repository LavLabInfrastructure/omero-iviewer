name: Sync Upstream Tag

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: write
  issues: write

jobs:
  sync-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout fork
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # Allow push with the runner token
          persist-credentials: true

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add upstream
        run: git remote add upstream https://github.com/ome/omero-iviewer.git

      - name: Detect default branch
        id: detect_branch
        run: |
          default_branch=$(git symbolic-ref --short refs/remotes/origin/HEAD | cut -d/ -f2)
          echo "DEFAULT_BRANCH=${default_branch:-master}" >> $GITHUB_ENV

      - name: Get latest upstream tag (no local tags created)
        id: get_upstream_tag
        run: |
          latest_tag=$(git ls-remote --tags upstream | awk -F/ '{print $3}' | grep -v '{}' | sort -V | tail -n1)
          if [ -z "$latest_tag" ]; then
            echo "No upstream tag found. Exiting."
            exit 0
          fi
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Check if tag exists on origin
        id: check_fork_tag
        run: |
          if git ls-remote --tags origin "${{ env.LATEST_TAG }}" | grep -q "${{ env.LATEST_TAG }}$"; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Merge upstream tag if not present
        if: steps.check_fork_tag.outputs.exists == 'false'
        id: merge
        run: |
          git fetch upstream tag "${{ env.LATEST_TAG }}"
          git checkout "${{ env.DEFAULT_BRANCH }}"
          git merge --no-ff --no-edit "refs/tags/${{ env.LATEST_TAG }}"
        continue-on-error: true

      - name: Push branch if merge succeeded
        if: steps.check_fork_tag.outputs.exists == 'false' && steps.merge.outcome == 'success'
        run: git push origin "${{ env.DEFAULT_BRANCH }}"

      - name: Try to fetch upstream release notes
        if: steps.check_fork_tag.outputs.exists == 'false' && steps.merge.outcome == 'success'
        run: |
          notes=$(curl -fsSL -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/ome/omero-iviewer/releases/tags/${{ env.LATEST_TAG }}" \
            | jq -r '.body // empty' || true)
          if [ -n "$notes" ]; then
            echo "RELEASE_NOTES_PRESENT=true" >> $GITHUB_ENV
            printf "RELEASE_NOTES<<'EOF'\n%s\nEOF\n" "$notes" >> $GITHUB_ENV
          else
            echo "RELEASE_NOTES_PRESENT=false" >> $GITHUB_ENV
          fi

      - name: Create release (reuse upstream notes)
        if: steps.check_fork_tag.outputs.exists == 'false' && steps.merge.outcome == 'success' && env.RELEASE_NOTES_PRESENT == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.LATEST_TAG }}
          target_commitish: ${{ env.DEFAULT_BRANCH }}
          name: ${{ env.LATEST_TAG }}
          body: ${{ env.RELEASE_NOTES }}

      - name: Create release (generate notes)
        if: steps.check_fork_tag.outputs.exists == 'false' && steps.merge.outcome == 'success' && env.RELEASE_NOTES_PRESENT == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.LATEST_TAG }}
          target_commitish: ${{ env.DEFAULT_BRANCH }}
          name: ${{ env.LATEST_TAG }}
          generate_release_notes: true

      - name: Create issue if merge failed
        if: steps.check_fork_tag.outputs.exists == 'false' && steps.merge.outcome == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Sync failed: Merge conflict for upstream tag ${process.env.LATEST_TAG}`,
              body: `Automatic sync with upstream tag \`${process.env.LATEST_TAG}\` failed due to merge conflicts. Please resolve manually.`,
              assignees: ["your-github-username"]
            })
